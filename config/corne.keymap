/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
        behaviors {
                tp: tap_preferred {
                    compatible = "zmk,behavior-hold-tap";
                    label = "TAP_PREFERRED";
                    #binding-cells = <2>;
                    tapping-term-ms = <135>;
                    quick-tap-ms = <0>;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
                  }; 
                };

        behaviors {
            mo_tog: behavior_mo_tog {
                    compatible = "zmk,behavior-hold-tap";
                    label = "mo_tog";
                    #binding-cells = <2>;
                    flavor = "hold-preferred";
                    tapping-term-ms = <150>;
                    bindings = <&mo>, <&tog>;
                };
            };

  // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
// | SHFT |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |
                        bindings = <
   &kp TAB   &kp Q   &kp W   &kp E   &kp R   &kp T        &kp Y &kp U   &kp I     &kp O   &kp P   &kp BSPC
   &kp LSHFT &kp A   &kp S   &kp D   &kp F   &kp G        &kp H &kp J   &kp K     &kp L   &kp SEMI &tp LC(LS(LALT)) SQT
   &kp LCTRL &kp Z   &kp X   &kp C   &kp V   &kp B        &kp N &kp M   &kp COMMA &kp DOT &kp FSLH &kp RSHFT 
             &tp LALT LGUI  &kp SPACE  &mo_tog 1 1        &mo_tog 2 2   &tp LALT RET    &kp ESC
                        >;
                };

                lower_layer  {
// -----------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |    5     |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// |  `  |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |  ~   |
// |     |  Y  |  +  |  =  |  _  |    -     |   |  {  |  }  |  [  |  ]  |  \  |  "|" |
//                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |
                        bindings = <
   &kp ESC      &kp N1   &kp N2    &kp N3     &kp N4      &kp N5           &kp N6       &kp N7     &kp N8          &kp N9      &kp N0    &kp BSPC
   &kp GRAVE    &kp EXCL &kp AT    &kp HASH   &kp DLLR    &kp PRCNT        &kp CARET    &kp AMPS   &kp KP_MULTIPLY &kp LPAR    &kp RPAR  &kp TILDE
   &kp LSHFT    &kp Y    &kp PLUS  &kp EQUAL  &kp UNDER   &kp MINUS        &kp LBRC     &kp RBRC   &kp LBKT        &kp RBKT    &kp BSLH  &kp PIPE
                                        &kp LALT   &kp SPACE &trans        &trans       &tp LALT RET &kp DEL 
                        >;
                };

                raise_layer  {
// -----------------------------------------------------------------------------------------
// |  F12  |  F1  |  F2  |  F3  |  F4  |  F5 |            | HOME   | PG_DN    | PG_UP    | END      | K_APP       |  ESC    | 
// |  F11  |  F6  | F7   | F8   | F9   | F10 |            | LFT    | DWN      |  UP      | RGT      | HOME        |  END    |
// | BTCLR | BT1  | BT2  | BT3  | BT4  | BT5 |            | C_MUTE | C_VOL_DN | C_VOL_UP | C_PREV   | C_NEXT      | Play/Pause  |
//                    |     |     |    |                  |      |     |     |
                        bindings = <
 &kp F12        &kp F1          &kp F2         &kp F3         &kp F4         &kp F5                &kp HOME         &kp PG_DN         &kp PG_UP        &kp END        &kp ESC        &kp DEL 
 &kp F11        &kp F6         &kp F7          &kp F8         &kp F9         &kp F10               &kp LEFT         &kp DOWN          &kp UP           &kp RIGHT      &kp HOME       &kp END
 &bt BT_CLR     &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4          &kp C_MUTE       &kp C_VOL_DN      &kp C_VOL_UP     &kp C_PREV     &kp C_NEXT     &kp C_PP 
                          	                               &trans    &trans    &trans          &trans      &trans      &trans
                        >;
                };


         adjust_layer  {
// -----------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |    5     |   | BT1  | BT2  | BT3  | BT4 | BT5 | BTCLR|
// |     |  Q  |  W  |  E  |  R  |    T     |   |  _  |  +  |  {  |  }  | "|" | SHFT |
// |     |  A  |  S  |  D  |  F  |    G     |   |  -  |  =  |  [  |  ]  |  \  | SHFT |
//                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |
                        bindings = <
   &kp ESC    &kp N1   &kp N2 &kp N3   &kp N4   &kp N5          &kp Y          &kp U            &kp I           &kp O         &kp P         &kp BSPC  
   &trans     &kp Q    &kp W  &kp E    &kp R    &kp T           &kp UNDER      &kp PLUS         &kp LBRC        &kp RBRC      &kp PIPE      &kp RSHFT
   &kp LCTRL  &kp A    &kp S  &kp D    &kp F    &kp G           &kp B          &kp EQUAL        &kp LBKT        &kp RBKT      &kp BSLH      &kp RSHFT
                       &kp LALT   &kp SPACE   &kp TAB          &trans         &trans           &trans
                        >;
                };

        };
};
